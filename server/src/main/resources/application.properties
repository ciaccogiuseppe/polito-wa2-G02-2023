spring.datasource.url=jdbc:postgresql://localhost:5432/ticketing
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate

spring.application.name=server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/SpringBootKeycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt.auth.converter.resource-id=springboot-keycloak-client
jwt.auth.converter.principal-attribute=preferred_username

logging.level.org.springframework.security=DEBUG
server.port=8081
# server.servlet.context-path=/api

# spring.security.oauth2.client.registration.keycloak.client-id=springboot-keycloak-client
# spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.keycloak.scope=openid
# spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/SpringBootKeycloak
# spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

keycloak.realm=SpringBootKeycloak
keycloak.resource=springboot-keycloak-client
# keycloak.auth-server-url=http://localhost:8080/realms/SpringBootKeycloak/protocol/openid-connect/auth
keycloak.auth-server-url=http://localhost:8080
# keycloak.ssl-required=external
# keycloak.public-client=true
# keycloak.principal-attribute=preferred_username
keycloak.credentials.secret=rrdcMGgdIDdfuMS713DqlMJBH4CxDeVT
# spring.main.allow-bean-definition-overriding=true
# keycloak.credentials.username=admin
# keycloak.credentials.password=admin
# keycloak.admin.client=admin-cli
# keycloak.admin.realm=master